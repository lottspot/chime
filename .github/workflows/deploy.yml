name: Deploy to production

on:
  pull_request:
    branches:
      - releases/v1
    types:
      - opened
      - synchronize
      - reopened
      - closed

env:
  # Required for action steebchen/kubectl
  KUBE_CONFIG_DATA: ${{ secrets.kubeconfig_data_prod }}

jobs:
  show-changes:
    if: github.event.pull_request.state != 'closed'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Get full history for tag lookup
      - uses: azure/setup-kubectl@v1
        with:
          version: v1.18.0

      - name: Add kubeconfig to environment
        run: |
          set -e
          test -e ~/.kube || mkdir ~/.kube
          cat <<EOF > ~/.kube/config
          $(printf '%s' "$KUBE_CONFIG_DATA" | base64 -d)
          EOF

      - name: Get app version
        run: |
          # Find tag ref
          git fetch --tags
          head_sha=$(git rev-parse ${{ github.head_ref }})
          ref=$(git describe --abbrev=0 --match 'v*' --exclude 'v*-rc.*' --tags $head_sha
          echo "::set-env name=DEPLOY_REF::$ref"

          if [ -z "$ref" ]; then
            echo error: could not find release tag for commit $head_sha
            exit 1
          fi

          # Strip "v" prefix from tag name
          VERSION=$(echo $ref | sed -e 's/^v//')

          # Pass version number to subsequent steps
          echo "::set-env name=VERSION::$VERSION"

      - name: Get deployment manifests
        uses: actions/download-artifact@v1
        with:
          name: deploy-${{ env.VERSION }}

      - name: Get resource diffs
        run: |
          set -e
          comment_file=/tmp/k8s_diff.txt

          diff=$(kubectl diff -Rf deploy-${{ env.VERSION }} || true)
          if [ -n "$diff" ]; then
            diff_msg=$(cat <<EOF
          Actions to deploy $DEPLOY_REF:
          \`\`\`diff
          $app_diff
          \`\`\`

          EOF)
          fi

          cat <<EOF > $comment_file
          $diff_msg
          EOF

      - uses: actions/upload-artifact@v1
        with:
          name: comment
          path: /tmp/k8s_diff.txt
      - uses: actions/download-artifact@v1
        with:
          name: comment

      - name: Publish resource diffs
        uses: machine-learning-apps/pr-comment@1.0.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          path: comment/k8s_diff.txt

  deploy-prod:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Get full history for tag lookup
      - uses: azure/setup-kubectl@v1
        with:
          version: v1.18.0

      - name: Add kubeconfig to environment
        run: |
          set -e
          test -e ~/.kube || mkdir ~/.kube
          cat <<EOF > ~/.kube/config
          $(printf '%s' "$KUBE_CONFIG_DATA" | base64 -d)
          EOF

      - name: Get app version
        run: |
          # Find tag ref
          git fetch --tags
          head_sha=$(git rev-parse ${{ github.head_ref }})
          ref=$(git describe --abbrev=0 --match 'v*' --exclude 'v*-rc.*' --tags $head_sha
          echo "::set-env name=DEPLOY_REF::$ref"

          if [ -z "$ref" ]; then
            echo error: could not find release tag for commit $head_sha
            exit 1
          fi

          # Strip "v" prefix from tag name
          VERSION=$(echo $ref | sed -e 's/^v//')

          # Pass version number to subsequent steps
          echo "::set-env name=VERSION::$VERSION"

      - name: Get deployment manifests
        uses: actions/download-artifact@v1
        with:
          name: deploy-${{ env.VERSION }}

      - name: Deploy to prod
        run: |
          set -e
          echo deploying version ${{ env.VERSION }}
          kubectl apply -Rf deploy-${{ env.VERSION }}

      - name: Wait for deployment to complete
        run: |
          kubectl -n chime rollout status deployment.v1.apps/chime
          kubectl -n chime get deployment chime -o yaml
